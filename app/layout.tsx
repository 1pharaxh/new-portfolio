import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { ThemeProvider } from "@/components/theme-provider";
import BottomDock from "@/components/bottom-dock";
import { headers } from "next/headers";
import React from "react";
import { DistortedGlass } from "@/components/distorted-glass";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Portfolio | Akarshan Mishra",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const headersList = headers();
  const header_url = headersList.get("x-url") || "";
  const hideDock = header_url.includes("hideDock=true") || false;
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <div className="relative w-full max-w-[30rem] m-auto px-3 min-h-screen flex flex-col justify-center items-center ">
            {!hideDock && (
              <div className="sticky top-0 z-50 w-full hidden sm:flex ">
                <DistortedGlass></DistortedGlass>
              </div>
            )}
            {children}
            {!hideDock && (
              <div className="fixed bottom-8 w-full">
                <BottomDock />
              </div>
            )}
          </div>
        </ThemeProvider>
      </body>
    </html>
  );
}
